@model Homecare.Models.DataModels.Route_Details

@{
    ViewBag.Title = "CreateRouteDetails";
}

<h2>CreateRouteDetails</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Route_Details</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.arrival, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.arrival, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.arrival, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Patient, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                Homecare.Models.DataModels.HomecareDBEntities db = new Homecare.Models.DataModels.HomecareDBEntities();
                List<SelectListItem> patients = new List<SelectListItem>();
                foreach (var item in db.Patients)
                {
                    patients.Add(new SelectListItem { Text = item.patient_name, Value = item.patient_name });
                }
            }
            @Html.DropDownListFor(model => model.Patient, patients, "Vælg patient", new { @style = "padding: 7px;" })
            @Html.ValidationMessageFor(model => model.Patient, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (ViewBag.created != null)
    {
        <div class="col-md-offset-2 col-md-10 text-success">
            @ViewBag.created
        </div>
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Opret" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Tilbage", "Index", "Routes", new { }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
